{{- if .Values.defaultPipeline.enabled }}

{{- $pipeline := .Values.defaultPipeline }}
{{- $source := $pipeline.source }}
{{- $sourceData := index $pipeline $source }}
{{- $base := dict
    "name" $pipeline.name
    "version" $pipeline.version
    "source" $pipeline.source
    "embedding_model" $pipeline.embedding_model
    "vector_store_name" $pipeline.vector_store_name
}}
{{- $pipelineData := merge $base $sourceData }}

apiVersion: batch/v1
kind: Job
metadata:
  name: add-default-ingestion-pipeline
spec:
  template:
    spec:
      initContainers:
        - name: wait-for-pipeline
          image: "image-registry.openshift-image-registry.svc:5000/openshift/tools:latest"
           {{- if .Values.authUser }}
          env:
            - name: LLAMA_STACK_AUTH_USER
              value: {{ .Values.authUser }}
          {{- end }}
          command:
            - /bin/bash
            - -c
            - |
              set -e
              url="http://{{ include "ingestion-pipeline.fullname" . }}/ping"
              echo "Waiting for $url..."
              until curl -ksf "$url"; do
                echo "Still waiting for $url ..."
                sleep 10
              done
              echo "Ingestion pipeline service ready"

              url="http://llamastack:8321/v1/models"
              if [ ! -z ${LLAMA_STACK_AUTH_USER} ]; then
                headers="-H \"X-Forwarded-User: ${LLAMA_STACK_AUTH_USER}\" -H \"Authorization: Bearer \$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\""
              fi
              echo "Waiting for $url..."
              cmd="curl -ksf $url $headers"
              echo "Running: $cmd"
              until eval $cmd; do
                echo "Still waiting for $url ..."
                sleep 10
              done
              echo "Llama Stack server is running"
      containers:
        - name: create-ingestion-pipeline
          image: "image-registry.openshift-image-registry.svc:5000/openshift/tools:latest"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              curl -sfX 'POST' \
              'http://{{ include "ingestion-pipeline.fullname" . }}/add' \
              -H 'accept: application/json' \
              -H 'Content-Type: application/json' \
              -d '{{ toJson $pipelineData }}'
      restartPolicy: Never
{{- end }}
