{{/*
Oracle 23ai StatefulSet with Enhanced Readiness Probes
*/}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "oracle-db.fullname" . }}
  labels:
    {{- include "oracle-db.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
spec:
  replicas: {{ .Values.oracle.replicaCount }}
  selector:
    matchLabels:
      {{- include "oracle-db.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  {{- with .Values.oracle.volumeClaimTemplates }}
  volumeClaimTemplates:
  {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.oracle.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oracle-db.labels" . | nindent 8 }}
        app.kubernetes.io/component: database
        {{- with .Values.oracle.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.oracle.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oracle-db.serviceAccountName" . }}
      {{- with .Values.oracle.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: oracle-db
          {{- with .Values.oracle.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.oracle.image.repository }}:{{ .Values.oracle.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.oracle.image.pullPolicy }}
          env:
            {{- toYaml .Values.oracle.env | nindent 12 }}
            # Secret-based environment variables
            - name: ORACLE_PWD
              valueFrom:
                secretKeyRef:
                  name: {{ include "oracle-db.fullname" . }}-user-system
                  key: password
            - name: ORACLE_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "oracle-db.fullname" . }}-user-system
                  key: username
            - name: ORACLE_SERVICE
              valueFrom:
                secretKeyRef:
                  name: {{ include "oracle-db.fullname" . }}-user-system
                  key: serviceName
            - name: ORACLE_PORT
              valueFrom:
                secretKeyRef:
                  name: {{ include "oracle-db.fullname" . }}-user-system
                  key: port
            {{- if .Values.oracle.users }}
            # User management script environment variables
            - name: ORACLE_HOST
              value: "localhost"
            - name: SECRETS_DIR
              value: "/user-secrets"
            {{- end }}
          ports:
            - name: oracle
              containerPort: {{ .Values.oracle.service.port }}
              protocol: TCP
          {{/*
          Readiness probe: Test FREEPDB1 connectivity
          */}}
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  # Test FREEPDB1 connectivity
                  echo "SELECT 'READY' FROM DUAL;" | sqlplus -s ${ORACLE_USER}/"${ORACLE_PWD}"@localhost:${ORACLE_PORT}/${ORACLE_SERVICE} 2>&1 | grep -q "READY"
            initialDelaySeconds: {{ .Values.oracle.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.oracle.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.oracle.probes.readiness.timeoutSeconds }}
            failureThreshold: {{ .Values.oracle.probes.readiness.failureThreshold }}
          
          {{/* Liveness probe: Test database connectivity */}}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - |
                  echo "SELECT 'READY' FROM DUAL;" | sqlplus -s ${ORACLE_USER}/"${ORACLE_PWD}"@localhost:${ORACLE_PORT}/${ORACLE_SERVICE} | grep -q "READY"
            initialDelaySeconds: {{ .Values.oracle.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.oracle.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.oracle.probes.liveness.timeoutSeconds }}
          
          {{- with .Values.oracle.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            {{- with .Values.oracle.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.oracle.users }}
            - name: create-users
              mountPath: /opt/oracle/scripts/startup/01-create-users.sh
              subPath: create-users.sh
              readOnly: true
            {{- range .Values.oracle.users }}
            - name: user-secret-{{ .name | replace "_" "-" }}
              mountPath: /user-secrets/{{ .name }}
              readOnly: true
            {{- end }}
            {{- end }}

      {{/* Volumes */}}
      volumes:
      {{- if .Values.oracle.users }}
        - name: create-users
          configMap:
            name: {{ include "oracle-db.fullname" . }}-create-users
            defaultMode: 0755
        {{- range .Values.oracle.users }}
        - name: user-secret-{{ .name | replace "_" "-" }}
          secret:
            secretName: {{ include "oracle-db.fullname" $ }}-user-{{ .name | replace "_" "-" }}
        {{- end }}
      {{- end }}

      {{- with .Values.oracle.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.oracle.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.oracle.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}