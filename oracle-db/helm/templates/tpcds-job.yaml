{{/*
TPC-DS Data Population Job
*/}}
{{- if .Values.tpcds.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "oracle-db.fullname" . }}-tpcds-populate
  labels:
    {{- include "oracle-db.labels" . | nindent 4 }}
    app.kubernetes.io/component: data-loader
  {{- with .Values.tpcds.job.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  backoffLimit: {{ .Values.tpcds.job.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.tpcds.job.activeDeadlineSeconds }}
  template:
    metadata:
      labels:
        {{- include "oracle-db.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: data-loader
    spec:
      restartPolicy: Never

      initContainers:
      # Wait for Oracle database and user management to be ready
      - name: wait-for-oracle
        image: "quay.io/rh-ai-quickstart/oracle-db-tpcds:{{ .Chart.Version }}"
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          export HOME=/tmp

          echo "[INFO] Waiting for Oracle database to be ready..."
          echo "[INFO] Waiting for user ${ORACLE_USER} to be created..."

          # Configure tpcds-util
          tpcds-util config set \
            --host "${ORACLE_HOST}" \
            --port "${ORACLE_PORT}" \
            --service-name "${ORACLE_SERVICE}" \
            --username "${ORACLE_USER}" \
            --password "${ORACLE_PWD}"

          MAX_WAIT=600
          elapsed=0

          while [[ $elapsed -lt $MAX_WAIT ]]; do
            if tpcds-util db test >/dev/null 2>&1; then
              echo "[INFO] Oracle database is ready and user ${ORACLE_USER} can connect"
              exit 0
            fi

            echo "[INFO] Waiting for Oracle and user creation... (${elapsed}s elapsed)"
            sleep 10
            elapsed=$((elapsed + 10))
          done

          echo "[ERROR] Oracle database not ready after ${MAX_WAIT}s"
          exit 1

        env:
        - name: ORACLE_PWD
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: password
        - name: ORACLE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: username
        - name: ORACLE_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: host
        - name: ORACLE_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: port
        - name: ORACLE_SERVICE
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: serviceName

        resources:
          {{- if and .Values.tpcds.job.resources .Values.tpcds.job.resources.waitForOracle }}
          {{- toYaml .Values.tpcds.job.resources.waitForOracle | nindent 10 }}
          {{- else }}
          requests:
            memory: "32Mi"
            cpu: "50m"
          limits:
            memory: "64Mi"
            cpu: "100m"
          {{- end }}

      containers:
      # Main container: TPC-DS data population
      - name: tpcds-populate
        image: "quay.io/rh-ai-quickstart/oracle-db-tpcds:{{ .Chart.Version }}"
        imagePullPolicy: Always
        command: ["/bin/bash", "-c"]
        args:
        - |
          set -e
          echo "[INFO] Starting TPC-DS data population"
          echo "[INFO] Using ${TARGET_SCHEMA} schema"
          echo "[INFO] Scale Factor: ${SCALE_FACTOR}"
          echo ""

          # Set writable HOME directory for tpcds-util config
          export HOME=/tmp

          # Configure tpcds-util with parameters from values.yaml
          echo "[INFO] Configuring TPC-DS utility..."
          tpcds-util config set \
            --host "${ORACLE_HOST}" \
            --port "${ORACLE_PORT}" \
            --service-name "${ORACLE_SERVICE}" \
            --username "${ORACLE_USER}" \
            --password "${ORACLE_PWD}" \
            --schema-name "${TARGET_SCHEMA}" \
            --default-scale "${SCALE_FACTOR}" \
            --parallel-workers "${PARALLEL_WORKERS}" \
            --output-dir "/tmp/tpcds_data"

          echo "[INFO] Current configuration:"
          tpcds-util config show
          echo ""

          # Final connectivity test before data loading
          echo "[INFO] Testing database connectivity..."
          if ! tpcds-util db test; then
            echo "[ERROR] Database connection failed - cannot proceed"
            exit 1
          fi
          echo ""

          # Generate synthetic data
          echo "[INFO] Generating synthetic TPC-DS data..."
          if ! tpcds-util generate data --scale "${SCALE_FACTOR}"; then
            echo "[ERROR] Data generation failed - cannot proceed"
            exit 1
          fi
          echo ""

          # Load data into Oracle (creates tables automatically)
          echo "[INFO] Creating tables and loading data into ${TARGET_SCHEMA} schema..."
          if ! tpcds-util load data --schema-file /app/oracle_tpcds_schema.sql --parallel "${PARALLEL_WORKERS}"; then
            echo "[ERROR] Data loading failed - cannot proceed"
            exit 1
          fi
          echo ""
          
          # Verification
          echo "[INFO] Verifying data loading..."
          echo "[INFO] Table statistics for ${TARGET_SCHEMA} schema:"
          tpcds-util db info
          echo ""

          echo "[INFO] TPC-DS data population completed successfully"
          echo "[INFO] All 25 TPC-DS tables loaded into ${TARGET_SCHEMA} schema"
        
        env:
        - name: ORACLE_PWD
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: password
        - name: ORACLE_USER
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: username
        - name: TARGET_SCHEMA
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: schema
        - name: ORACLE_HOST
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: host
        - name: ORACLE_PORT
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: port
        - name: ORACLE_SERVICE
          valueFrom:
            secretKeyRef:
              name: {{ include "oracle-db.fullname" . }}-user-{{ .Values.tpcds.user | replace "_" "-" }}
              key: serviceName
        - name: SCALE_FACTOR
          value: {{ .Values.tpcds.scaleFactor | quote }}
        - name: PARALLEL_WORKERS
          value: {{ .Values.tpcds.parallel | quote }}
        - name: ORACLE_AUTOCOMMIT
          value: "ON"
        
        volumeMounts:
        - name: tpcds-data
          mountPath: /home/tpcds/tpcds_data

        resources:
          {{- if and .Values.tpcds.job.resources .Values.tpcds.job.resources.tpcdsPopulate }}
          {{- toYaml .Values.tpcds.job.resources.tpcdsPopulate | nindent 10 }}
          {{- else }}
          requests:
            memory: "1Gi"
            cpu: "1"
          limits:
            memory: "2Gi"
            cpu: "2"
          {{- end }}

      volumes:
      - name: tpcds-data
        emptyDir:
          sizeLimit: 5Gi
{{- end }}
