{{- $root := . }}
{{- $servers := include "mcp-servers.mergeMcpServers" . | fromJson }}
{{- range $key, $server := $servers }}
{{- if $server.enabled }}
{{- $serverDict := dict "root" $root "key" $key "server" $server }}
---
apiVersion: toolhive.stacklok.dev/v1alpha1
kind: MCPServer
metadata:
  name: {{ $key }}
  labels:
    {{- include "mcp-servers.labels" $serverDict | nindent 4 }}
spec:
  image: "{{ $server.image }}"
  permissionProfile:
    name: {{ $server.permissionProfile.name | default "network" }}
    type: {{ $server.permissionProfile.type | default "builtin" }}
  podTemplateSpec:
    metadata: {}
    spec:
      serviceAccountName: {{ include "mcp-servers.serviceAccountName" $serverDict }}
      {{- with $server.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- if and $server.persistence $server.persistence.enabled }}
      - name: {{ $server.persistence.volumeName | default "data" }}
        ephemeral:
          volumeClaimTemplate:
            metadata:
              labels:
                {{- include "mcp-servers.labels" $serverDict | nindent 16 }}
            spec:
              accessModes:
                - {{ $server.persistence.accessMode }}
              resources:
                requests:
                  storage: {{ $server.persistence.size }}
              {{- if $server.persistence.storageClassName }}
              storageClassName: {{ $server.persistence.storageClassName }}
              {{- end }}
      {{- end }}
      {{- with $server.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - name: mcp
        image: "{{ $server.image }}"
        imagePullPolicy: {{ $server.imagePullPolicy | default "IfNotPresent" }}
        {{- if or $server.env $server.envSecrets }}
        env:
        {{- with $server.env }}
        {{- range $envKey, $envValue := . }}
        {{- if ne $envValue nil }}
        - name: {{ $envKey }}
          value: {{ $envValue | quote }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- with $server.envSecrets }}
        {{- range $envKey, $secretSpec := . }}
        - name: {{ $envKey }}
          valueFrom:
            secretKeyRef:
              name: {{ $secretSpec.name }}
              key: {{ $secretSpec.key }}
        {{- end }}
        {{- end }}
        {{- end }}
        {{- with $server.volumeMounts }}
        volumeMounts:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with $server.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $server.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
  port: {{ $server.port | default 8080 }}
  {{- if $server.targetPort }}
  targetPort: {{ $server.targetPort }}
  {{- end }}
  transport: {{ $server.transport | default "stdio" }}
{{- end }}
{{- end }}