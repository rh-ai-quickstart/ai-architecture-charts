{{- $root := . }}
{{- $canDeploy := include "mcp-servers.canDeployMCPServer" . }}
{{- $servers := include "mcp-servers.mergeMcpServers" . | fromJson }}
{{- range $key, $server := $servers }}
{{- $deploymentMode := $server.deploymentMode | default "auto" }}
{{- $useMCPServer := false }}
{{- if eq $deploymentMode "mcpserver" }}
  {{- $useMCPServer = true }}
{{- else if eq $deploymentMode "auto" }}
  {{- $useMCPServer = eq $canDeploy "true" }}
{{- end }}
{{- if and $server.enabled $useMCPServer }}
{{- $serverDict := dict "root" $root "key" $key "server" $server }}
---
apiVersion: toolhive.stacklok.dev/v1alpha1
kind: MCPServer
metadata:
  name: {{ $key }}
  labels:
    {{- include "mcp-servers.labels" $serverDict | nindent 4 }}
spec:
  image: "{{ $server.image.repository }}:{{ $server.image.tag | default $root.Chart.Version }}"
  transport: {{ $server.transport | default "stdio" }}
  {{- with $server.port }}
  port: {{ . }}
  {{- end }}
  {{- with $server.targetPort }}
  targetPort: {{ . }}
  {{- end }}
  {{- with $server.permissionProfile }}
  permissionProfile:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- with $server.env }}
  env:
    {{- range $name, $value := . }}
    - name: {{ $name }}
      {{- if $value }}
      value: {{ $value | quote }}
      {{- else }}
      value: ""
      {{- end }}
    {{- end }}
  {{- end }}
  {{- with $server.envSecrets }}
  secrets:
    {{- range $envName, $secretRef := . }}
    - name: {{ $secretRef.name }}
      key: {{ $secretRef.key }}
      targetEnvName: {{ $envName }}
    {{- end }}
  {{- end }}
  {{- if $server.serviceAccount }}
  {{- with $server.serviceAccount.name }}
  serviceAccount: {{ . }}
  {{- end }}
  {{- end }}
  {{- if or $server.securityContext $server.podSecurityContext $server.volumes $server.volumeMounts $server.resources $server.waitFor }}
  podTemplateSpec:
    spec:
      {{- with $server.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $server.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $server.waitFor }}
      initContainers:
        {{- range $index, $waitItem := . }}
        - name: wait-for-{{ $waitItem.name }}
          image: {{ $waitItem.image | default "busybox:1.35" }}
          command:
            - /bin/sh
            - -c
            - |
              echo "Waiting for {{ $waitItem.name }} ({{ $waitItem.type }})..."
              {{- if eq $waitItem.type "secret" }}
              until kubectl get secret {{ $waitItem.name }} -n {{ $root.Release.Namespace }} >/dev/null 2>&1; do
                echo "Waiting for secret {{ $waitItem.name }}..."
                sleep {{ $waitItem.interval | default 5 }}
              done
              echo "Secret {{ $waitItem.name }} is ready!"
              {{- else if eq $waitItem.type "job" }}
              until kubectl get job {{ $waitItem.name }} -n {{ $root.Release.Namespace }} -o jsonpath='{.status.conditions[?(@.type=="Complete")].status}' | grep -q "True"; do
                echo "Waiting for job {{ $waitItem.name }} to complete..."
                sleep {{ $waitItem.interval | default 10 }}
              done
              echo "Job {{ $waitItem.name }} completed successfully!"
              {{- else if eq $waitItem.type "pod" }}
              until kubectl get pod {{ $waitItem.name }} -n {{ $root.Release.Namespace }} -o jsonpath='{.status.phase}' | grep -q "Running"; do
                echo "Waiting for pod {{ $waitItem.name }} to be running..."
                sleep {{ $waitItem.interval | default 5 }}
              done
              echo "Pod {{ $waitItem.name }} is running!"
              {{- end }}
          {{- with $waitItem.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}
      {{- if or $server.securityContext $server.volumeMounts $server.resources }}
      containers:
      - name: mcp
        {{- with $server.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $server.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with $server.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
      {{- end }}
  {{- end }}
{{- end }}
{{- end }}
