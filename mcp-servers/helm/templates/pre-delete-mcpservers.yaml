{{- $root := . }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-mcp-servers-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: mcp-servers
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-mcp-servers-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: mcp-servers
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
- apiGroups: ["toolhive.stacklok.dev"]
  resources: ["mcpservers"]
  verbs: ["get", "list", "delete", "deletecollection"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-mcp-servers-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "-10"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: mcp-servers
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ .Release.Name }}-mcp-servers-delete
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-mcp-servers-delete
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-mcp-servers-delete
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  labels:
    app.kubernetes.io/name: mcp-servers
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  backoffLimit: 2
  template:
    metadata:
      name: {{ .Release.Name }}-mcp-servers-delete
      labels:
        app.kubernetes.io/name: mcp-servers
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      serviceAccountName: {{ .Release.Name }}-mcp-servers-delete
      restartPolicy: Never
      containers:
      - name: delete-mcpservers
        image: "image-registry.openshift-image-registry.svc:5000/openshift/tools:latest"
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          set -e
          echo "Deleting MCPServer CRs before operator removal..."

          # Delete all MCPServers managed by this release
          oc delete mcpservers \
            -n {{ .Release.Namespace }} \
            -l app.kubernetes.io/instance={{ .Release.Name }} \
            --wait=true \
            --timeout=120s || true

          echo "MCPServer CRs deleted successfully"
