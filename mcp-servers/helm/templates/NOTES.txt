🚀 MCP Servers with Toolhive have been deployed successfully!

Release: {{ .Release.Name }}
Namespace: {{ .Release.Namespace }}

## 📋 Deployment Status

Check Toolhive Operator:
  kubectl get deployment -l app.kubernetes.io/name=toolhive-operator -n {{ .Release.Namespace }}

Check MCPServer Resources:
  kubectl get mcpservers -n {{ .Release.Namespace }}

## 🔍 Monitoring Commands

# View all MCP server statuses
kubectl get mcpservers -n {{ .Release.Namespace }} -o wide

# Check specific MCP server details
{{- $servers := include "mcp-servers.mergeMcpServers" . | fromJson }}
{{- range $key, $server := $servers }}
{{- if and $server.mcpserver $server.mcpserver.enabled }}
kubectl describe mcpserver {{ $key }} -n {{ $.Release.Namespace }}
{{- end }}
{{- end }}

# View MCP server logs
{{- range $key, $server := $servers }}
{{- if and $server.mcpserver $server.mcpserver.enabled }}
kubectl logs -l toolhive-name={{ $key }} -n {{ $.Release.Namespace }}
{{- end }}
{{- end }}

## 🌐 Service Endpoints

{{- range $key, $server := $servers }}
{{- if and $server.mcpserver $server.mcpserver.enabled }}
{{ $key | title }} MCP Server:
  Service: http://mcp-{{ $key }}-proxy.{{ $.Release.Namespace }}.svc.cluster.local:{{ $server.mcpserver.port | default 8080 }}
  Health:  http://mcp-{{ $key }}-proxy.{{ $.Release.Namespace }}.svc.cluster.local:{{ $server.mcpserver.port | default 8080 }}/health
  {{- if eq $server.mcpserver.transport "sse" }}
  SSE:     http://mcp-{{ $key }}-proxy.{{ $.Release.Namespace }}.svc.cluster.local:{{ $server.mcpserver.port | default 8080 }}/sse
  {{- end }}
{{- end }}
{{- end }}

## 🔐 Security Notes

{{- range $key, $server := $servers }}
{{- if and $server.mcpserver $server.mcpserver.enabled }}
{{- if and $server.mcpserver.envSecrets $server.mcpserver.envSecrets.ORACLE_PASSWORD }}
{{ $key | title }} Database Credentials:
  Credentials are securely sourced from Kubernetes secret: {{ $server.mcpserver.envSecrets.ORACLE_PASSWORD.name | default "oracle23ai" }}
  Ensure this secret exists with required keys
{{- end }}
{{- if and $server.mcpserver.env $server.mcpserver.env.TAVILY_API_KEY }}
{{ $key | title }} API Configuration:
  {{- if eq ($server.mcpserver.env.TAVILY_API_KEY | default "") "" }}
  ⚠️  TAVILY_API_KEY is empty. Update with your API key for weather functionality.
  {{- else }}
  ✅ TAVILY_API_KEY is configured.
  {{- end }}
{{- end }}
{{- end }}
{{- end }}

## 🛠️ Troubleshooting

If pods are not starting:
1. Check MCPServer resource status
2. Verify Toolhive operator is running
3. Ensure secrets exist (for oracle-sqlcl)
4. Check SCC permissions

Debug commands:
  kubectl logs -l app.kubernetes.io/name=toolhive-operator -n {{ .Release.Namespace }}
  kubectl get events -n {{ .Release.Namespace }} --sort-by='.lastTimestamp'

## 📚 Next Steps

1. Configure API keys (if needed)
2. Test MCP server endpoints
3. Integrate with your AI services
4. Monitor performance and logs

For more information, see the README.md file.